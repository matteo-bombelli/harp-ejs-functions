<%

// -----------------------------------------------------------------------------
//
// polyfills
//
// -----------------------------------------------------------------------------

// simplier than shallow copy
MB.copyObjJSON = function(obj1){ 
	return JSON.parse(JSON.stringify(obj1)) 
}
MB.copyObj = MB.copyObjJSON ;

// get relative path to the base if you don't want to use absolute path and don't
// want to use languages

MB.BasePath = function(variables){
	var varsStd = {
		path: MB.copyObj(current.source)
	};

	if(typeof variables === "undefined"){
		variables = varsStd;
	}

	var PathBase = "";
	var numLivelli = variables.path.length - 1;

	for (var i=0; i<numLivelli; i++){
		PathBase = PathBase + "../";
	}

	return PathBase;
}

MB.checkUnderscore = function(){
	/*
	if(typeof _ === "undefined"){
		return false;
	}else{
		return true;
	}
	*/
	return true;
}

// function to write if other functions has errors (need to be called...)
MB.logErrors = function(variables){
	var varsStd={
		name:"no name function ",
		values: "no values given"
	};
	var operator;
	var resoutlt;

	if(typeof variables !== "undefined"){
		for( i in varsStd){
			if(typeof variables[i] !== "undefined"){
				operator[i] = variables[i];
			}else{
				operator[i] = varsStd[i];
			}
		}
	}else{
		operator = MB.copyObjJSON(varStd);
	}
	if(typeof debug !== "undefined"){
		if(debug){
			
		}
	}
}

%>