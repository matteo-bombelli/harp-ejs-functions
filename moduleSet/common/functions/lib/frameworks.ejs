<%
// -----------------------------------------------------------------------------

// modules functions

// -----------------------------------------------------------------------------

MB.framework={};
    MB.framework.attivo="attivo";
	
	// get a page template
	MB.framework.gettemplate = function(options){
		
		if(typeof options !== "undefined"){
			if(typeof options.framework !== "undefined"){
				var framework = options.framework;
			}else{
                var framework = mbfunction.framework;
            }
			if(typeof options.name !== "undefined"){
				var name = options.name;
			}
			if(typeof options.vars !== "undefined"){
				var variables = options.vars;
			}else{
				var variables = false;
			}
		}
		
		if(typeof name !== "undefined"){
			if(name){
				if(typeof framework === "undefined"){
					framework = mbfunction.framework;
				}else if(!framework){
					framework = mbfunction.framework;
				}
				// return "framework:"+framework+", relativepath: "+"../../../"+framework+"/templates/"+name+"/"+name ;
				if(!variables){
					return partial("../../../"+framework+"/templates/"+name+"/"+name);
				}else{
					return partial("../../../"+framework+"/templates/"+name+"/"+name, variables);
				}
			}
		}
        
        // valori = "ciao";
        
		return false;
	}

	// get a module
	MB.framework.getmodule = function(options){
		/*
		varStd={
			framework: framework,
			name: false, // this is required
			variables: false // with this object you can pass variables to the module
		}
		*/
		if(typeof options !== "undefined"){
			if(typeof options.framework !== "undefined"){
				var framework = options.framework;
			}
			if(typeof options.name !== "undefined"){
				var name = options.name;
			}
			if(typeof options.vars !== "undefined"){
				var variables = options.vars;
			}else{
				var variables = false;
			}
			if(typeof options.debug !== "undefined"){

			}
		}
		if(typeof name !== "undefined"){
			if(name){
				if(typeof framework === "undefined"){
					framework = mbfunction.framework;
				}else if(!framework){
					framework = mbfunction.framework;
				}
				// return "../../../"+framework+"/module/"+name+"/"+name;
				if(!variables){
					return partial("../../../"+framework+"/modules/"+name+"/"+name);
				}else{
					return partial("../../../"+framework+"/modules/"+name+"/"+name, variables);
				}
			}
		}
		return false;
	}

	// like wordpress function, so you can use it in your css 
	// (I think it is relevant only for the page you're in...)
	MB.framework.getBodyClass = function(){
		var bodyClass="";

		if(typeof template !== "undefined"){
			if(template){
				bodyClass += " tpl-"+template;
			}
		}

		var currentPath = MB.locale.langPath();
		
		if(currentPath.length>1){
			var currentFolder = MB.copyObjJSON(currentPath).pop();
			bodyClass += " folder-" + currentFolder.join("-");
		}else{
			bodyClass += " root";
		}

		bodyClass += " path-" + currentPath.join("-");

		return bodyClass;
	}
    
	// the SEO/filePages part
    MB.framework.SEO={};

	// Get the title of a page
    MB.framework.SEO.getTitle = function(variables){
        var SEOtitle = false;
        
        // standard values
        var SEOstd = {
            divider : " - ",
            path : MB.copyObjJSON(current.source)
        };
        
        var SEO={};
        
		// populate missing fields with the standard values
        if(typeof variables !== "undefined"){
            for(i in SEOstd){
                if(typeof variables[i] !== "undefined"){
                    SEO[i] = variables[i];
                }else{
                    SEO[i] = SEOstd[i];
                }
            }
        }else{
            SEO = MB.copyObjJSON(SEOstd);
        }
        
		// first start searching for SEO title in the _data.json
		// iF we are using the function for the page we're in we can take 
		// them directly by vars
        if(MB.copyObjJSON(SEO.path) == MB.copyObjJSON(current.source)){
            if(typeof SiteTitle !== "undefined"){
                SEO.SiteTitle = SiteTitle;
            }else{
				SEO.PageTitle = false ;
			}
            if(typeof PageTitle !== "undefined"){
                SEO.PageTitle = PageTitle;
            }else{
				SEO.PageTitle = false ;
			}
        }else{

			// if you are not in the page you are searching title for.
            if(MB.general.getPageProperty({path : SEO.path, property : "PageTitle" } )){
				SEO.PageTitle = MB.general.getPageProperty( {path : SEO.path, property : "PageTitle" } ); 
			}else{
				SEO.PageTitle = false ;
			}
			if(MB.general.getPageProperty({path : SEO.path, property : "SiteTitle" } )){
				SEO.SiteTitle = MB.general.getPageProperty({path : SEO.path, property : "SiteTitle" } );
			}else{
				if(typeof SiteTitle !== "undefined"){
					SEO.SiteTitle = SiteTitle;
				}else{
					SEO.SiteTitle = false;
				}
			}
        }

		// if the title is not already set
		if(!SEO.PageTitle){
			
			if(typeof SEO.SiteTitle !== "undefined"){
				if(SEO.SiteTitle){
					// if you are searching the title for the homepage, 
					// the best solution is to use the site name
					SEO.langPath = MB.locale.langPath(SEO.path);
					if(MB.copyObjJSON(MB.locale.langPath(SEO.path))==["index"]){
						SEO.PageTitle = SEO.SiteTitle;
						return SEO.PageTitle;
					}
				}
			}
			// if you are not in the index of a folder i'll take the name of 
			// the file sanitized
			if( MB.copyObjJSON(SEO.path[SEO.path.length - 1]) != "index" ){
				var fileName = SEO.path[SEO.path.length - 1];
				SEO.PageTitle = fileName.replace("-", " ").replace("_", " ");
			}else{
				// if you are in the index of a subfolder it is possible to 
				// sanitized the name of the folder
				if(typeof SEO.SiteTitle !== "undefined"){
					SEO.langPath = MB.locale.langPath(SEO.path);
					if(SEO.path.length>1){
						SEO.PageTitle = MB.copyObjJSON(SEO.path[SEO.path.length - 2]).replace(/-/g," ").replace(/_/g," ") ;
					}
				}
			}
		}

		if(SEO.PageTitle){
			if(typeof SEO.SiteTitle !== "undefined"){
				if(SEO.SiteTitle){
					// if everything is ok we can use PageTitle and SiteTitle
					SEO.PageTitle = SEO.PageTitle + SEO.divider + SEO.SiteTitle;
					return SEO.PageTitle;
				}else{
					// else only the page title
					return SEO.PageTitle;
				}
			}
		}else{

			//last chanche SiteTitle
			if(typeof SEO.SiteTitle !== "undefined"){
				if(SEO.SiteTitle){
					return SEO.SiteTitle;
				}
			}
		}

		// No way...
		return false;
    }

%>